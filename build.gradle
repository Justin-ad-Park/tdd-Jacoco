plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

jacoco {
    toolVersion = '0.8.7'
}

bootWar.enabled = false

//bootWar {
//    mainClassName = 'billing.BillingService'
//}

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    testImplementation ('org.springframework.boot:spring-boot-starter-test')

}

test {
     useJUnitPlatform()
    // finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true

        html.destination file("$buildDir/jacoco/jacoco.html")
        xml.destination file("$buildDir/jacoco/jacoco.xml")
    }


//    def Qdomains = []
//    for (qPattern in '**/QA'..'**/QZ') {
//        Qdomains.add(qPattern + '*')
//    }
//
//    afterEvaluate {
//        classDirectories.setFrom(
//                files(classDirectories.files.collect {
//                    fileTree(dir: it, excludes: [
//                            '**/BlogApplication*',
//                            '**/*Request*',
//                            '**/*Response*',
//                            '**/*Dto*',
//                    ] + Qdomains)
//                })
//        )
//    }

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    def Qdomains = []
    for (qPattern in '*.QA'..'*.QZ') {
        Qdomains.add(qPattern + '*')
    }

    violationRules {
        rule {
            element = 'CLASS'
            enabled = true

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.90
            }

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.90
            }

            /*
            excludes = [
                    '**.*BlogApplication*',
                    '**.*Request*',
                    '**.*Response*',
                    '**.*Dto*',
            ] + Qdomains
            */
        }
    }
}